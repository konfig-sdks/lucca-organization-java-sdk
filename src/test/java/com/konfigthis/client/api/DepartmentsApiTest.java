/*
 * Organization structure API
 * Welcome on the documentation for the Organization Structure API 
 *
 * The version of the OpenAPI document: 1.0
 * Contact: developers@lucca.fr
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.api;

import com.konfigthis.client.ApiException;
import com.konfigthis.client.ApiClient;
import com.konfigthis.client.ApiException;
import com.konfigthis.client.Configuration;
import com.konfigthis.client.model.DepartmentsGetAllResponse;
import com.konfigthis.client.model.DepartmentsGetByIdResponse;
import com.konfigthis.client.model.DepartmentsListTreeResponse;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.BeforeAll;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for DepartmentsApi
 */
@Disabled
public class DepartmentsApiTest {

    private static DepartmentsApi api;

    
    @BeforeAll
    public static void beforeClass() {
        ApiClient apiClient = Configuration.getDefaultApiClient();
        api = new DepartmentsApi(apiClient);
    }

    /**
     * List Departments
     *
     * List all Departments satisfying query filters.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getAllTest() throws ApiException {
        String paging = null;
        Integer headId = null;
        Integer parentId = null;
        DepartmentsGetAllResponse response = api.getAll(paging)
                .headId(headId)
                .parentId(parentId)
                .execute();
        // TODO: test validations
    }

    /**
     * Get Departement by id
     *
     * Retrieve a single Department by its unique identifier.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getByIdTest() throws ApiException {
        Integer departmentId = null;
        DepartmentsGetByIdResponse response = api.getById(departmentId)
                .execute();
        // TODO: test validations
    }

    /**
     * List Departements as a tree
     *
     * List all departments as a tree. Remark: first node is always empty and represents the starting point of the tree as multiple departments might be set to the highest level. 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void listTreeTest() throws ApiException {
        DepartmentsListTreeResponse response = api.listTree()
                .execute();
        // TODO: test validations
    }

}
